(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{528:function(t,a,e){"use strict";e.r(a);var i=e(6),v=Object(i.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"响应状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应状态码"}},[t._v("#")]),t._v(" 响应状态码")]),t._v(" "),e("ul",[e("li",[t._v("1××：提示信息，表示目前是协议处理的中间状态，还需要后续的操作，如 101 Switching Protocols。")]),t._v(" "),e("li",[t._v("2××：成功，报文已经收到并被正确处理，如 200 OK，201 Created。")]),t._v(" "),e("li",[t._v("3××：重定向，资源位置发生变动，需要客户端重新发送请求，如 301 Moved Permanently，302 Found。")]),t._v(" "),e("li",[t._v("4××：客户端错误，请求报文有误，服务器无法处理，如 400 Bad Request，401 Unauthorized。")]),t._v(" "),e("li",[t._v("5××：服务器错误，服务器在处理请求时内部发生了错误，如 500 Internal Server Error，502 Bad Gateway。")])]),t._v(" "),e("h2",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),e("p",[t._v("在 HTTP 中使用的是 MIME 类型标注，该标准将数据类型分层了 8 大类。")]),t._v(" "),e("p",[t._v("MIME 类型的结构是 type/subtype，type 代表一个大类，subtype 则代表了具体的类型。")]),t._v(" "),e("h3",{attrs:{id:"类别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类别"}},[t._v("#")]),t._v(" 类别")]),t._v(" "),e("ul",[e("li",[t._v("application：表明是某种二进制数据，如 application/xml, application/pdf, application/json。")]),t._v(" "),e("li",[t._v("audio：表明是某种音频文件，如 audio/ogg, audio/wav。")]),t._v(" "),e("li",[t._v("font")]),t._v(" "),e("li",[t._v("example")]),t._v(" "),e("li",[t._v("image：表明是某种图像。不包括视频，但是动态图（比如动态 gif）也使用 image 类型，如 image/gif, image/png, image/jpeg。")]),t._v(" "),e("li",[t._v("message")]),t._v(" "),e("li",[t._v("model")]),t._v(" "),e("li",[t._v("multipart：表示细分领域的文件类型的种类，如 multipart/form-data。")]),t._v(" "),e("li",[t._v("text：表明文件是普通文本，理论上是人类可读，如 text/plain, text/html, text/css。")]),t._v(" "),e("li",[t._v("video：表明是某种视频文件，如 video/webm, video/ogg。")])]),t._v(" "),e("h3",{attrs:{id:"使用的-http-header"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用的-http-header"}},[t._v("#")]),t._v(" 使用的 HTTP header")]),t._v(" "),e("ul",[e("li",[t._v("Accept：表面客户端希望接收的数据类型。")]),t._v(" "),e("li",[t._v("Content-Type：表面服务端发送的数据类型。")])]),t._v(" "),e("h2",{attrs:{id:"编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编码"}},[t._v("#")]),t._v(" 编码")]),t._v(" "),e("p",[t._v("这里的编码不是文件编码，而是 HTTP 传输时的压缩编码。")]),t._v(" "),e("h3",{attrs:{id:"类别-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类别-2"}},[t._v("#")]),t._v(" 类别")]),t._v(" "),e("ul",[e("li",[t._v("gzip：GNU zip 压缩格式，也是互联网上最流行的压缩格式。")]),t._v(" "),e("li",[t._v("deflate：zlib（deflate）压缩格式，流行程度仅次于 gzip。")]),t._v(" "),e("li",[t._v("br：一种专门为 HTTP 优化的新压缩算法（Brotli）。")])]),t._v(" "),e("h3",{attrs:{id:"使用的-http-header-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用的-http-header-2"}},[t._v("#")]),t._v(" 使用的 HTTP header")]),t._v(" "),e("ul",[e("li",[t._v("Accept-Encoding：表面客户端支持的的编码。")]),t._v(" "),e("li",[t._v("Content-Encoding：表面服务器实际发送的编码。")])])])}),[],!1,null,null,null);a.default=v.exports}}]);
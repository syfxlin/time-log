(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{506:function(t,r,n){"use strict";n.r(r);var e=n(6),a=Object(e.a)({},(function(){var t=this,r=t.$createElement,n=t._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("p",[n("strong",[t._v("意图")]),t._v("：避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。")]),t._v(" "),n("p",[n("strong",[t._v("主要解决问题")]),t._v("：职责链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，所以职责链将请求的发送者和请求的处理者解耦了。")]),t._v(" "),n("p",[n("strong",[t._v("实现方式")]),t._v("：拦截的类都实现统一接口。")]),t._v(" "),n("p",[n("strong",[t._v("关键代码")]),t._v("：组合 Handler 或者使用统一的 Handler 管理器，按序执行这些 Handler。")]),t._v(" "),n("p",[n("strong",[t._v("优点")]),t._v("：1、降低耦合度。它将请求的发送者和接收者解耦。2、简化了对象。使得对象不需要知道链的结构。3、增强给对象指派职责的灵活性。通过改变链内的成员或者调动它们的次序，允许动态地新增或者删除责任。4、增加新的请求处理类很方便。")]),t._v(" "),n("p",[n("strong",[t._v("缺点")]),t._v("：调试较为麻烦。")]),t._v(" "),n("p",[n("strong",[t._v("使用场景")]),t._v("：1、拦截器（中间件）。 2、过滤器。")]),t._v(" "),n("h2",{attrs:{id:"代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/syfxlin/code/blob/master/design-pattern-java/src/main/java/me/ixk/design_pattern/chain",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),n("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=a.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{504:function(t,v,_){"use strict";_.r(v);var r=_(6),e=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),_("p",[_("strong",[t._v("意图")]),t._v("：将抽象部分与实现部分分离，使它们都可以独立的变化。")]),t._v(" "),_("p",[_("strong",[t._v("主要解决问题")]),t._v("：在有多种可能会变化的情况下，用继承会造成类爆炸问题，扩展起来不灵活。")]),t._v(" "),_("p",[_("strong",[t._v("实现方式")]),t._v("：把这种多角度分类分离出来，让它们独立变化，减少它们之间耦合。")]),t._v(" "),_("p",[_("strong",[t._v("关键代码")]),t._v("：抽象类依赖实现类。")]),t._v(" "),_("p",[_("strong",[t._v("优点")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("抽象和实现的分离。")]),t._v(" "),_("li",[t._v("优秀的扩展能力。")]),t._v(" "),_("li",[t._v("实现细节对客户透明。")])]),t._v(" "),_("p",[_("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程。")])]),t._v(" "),_("p",[_("strong",[t._v("使用场景")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，通过桥接模式可以使它们在抽象层建立一个关联关系。")]),t._v(" "),_("li",[t._v("对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。")]),t._v(" "),_("li",[t._v("一个类存在两个独立变化的维度，且这两个维度都需要进行扩展。")])]),t._v(" "),_("h2",{attrs:{id:"代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://github.com/syfxlin/code/blob/master/design-pattern-java/src/main/java/me/ixk/design_pattern/bridge",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),_("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=e.exports}}]);
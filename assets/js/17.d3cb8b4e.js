(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{507:function(t,r,e){"use strict";e.r(r);var n=e(6),a=Object(n.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("p",[e("strong",[t._v("意图")]),t._v("：将一个请求封装成一个对象，从而使您可以用不同的请求对客户进行参数化。")]),t._v(" "),e("p",[e("strong",[t._v("主要解决问题")]),t._v("：在软件系统中，行为请求者与行为实现者通常是一种紧耦合的关系，但某些场合，比如需要对行为进行记录、撤销或重做、事务等处理时，这种无法抵御变化的紧耦合的设计就不太合适。")]),t._v(" "),e("p",[e("strong",[t._v("实现方式")]),t._v("：通过调用者调用接受者执行命令，顺序：调用者 → 命令 → 接受者。")]),t._v(" "),e("p",[e("strong",[t._v("关键代码")]),t._v("：定义三个角色：1、Received 真正的命令执行对象 2、Command 3、Invoker 使用命令对象的入口，视情况 Invoker 可省略。")]),t._v(" "),e("p",[e("strong",[t._v("优点")]),t._v("：1、降低了系统耦合度。 2、新的命令可以很容易添加到系统中去。")]),t._v(" "),e("p",[e("strong",[t._v("缺点")]),t._v("：使用命令模式可能会导致某些系统有过多的具体命令类。")]),t._v(" "),e("p",[e("strong",[t._v("使用场景")]),t._v("：1、按钮。2、执行命令")]),t._v(" "),e("h2",{attrs:{id:"代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/syfxlin/code/blob/master/design-pattern-java/src/main/java/me/ixk/design_pattern/command",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),e("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=a.exports}}]);
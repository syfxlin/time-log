(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{505:function(t,r,e){"use strict";e.r(r);var a=e(6),v=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("p",[e("strong",[t._v("意图")]),t._v("：将一个复杂的构建与其表示相分离，使得同样的构建过程可以创建不同的表示。")]),t._v(" "),e("p",[e("strong",[t._v("主要解决问题")]),t._v('：主要解决在软件系统中，有时候面临着"一个复杂对象"的创建工作，其通常由各个部分的子对象用一定的算法构成；由于需求的变化，这个复杂对象的各个部分经常面临着剧烈的变化，但是将它们组合在一起的算法却相对稳定。')]),t._v(" "),e("p",[e("strong",[t._v("实现方式")]),t._v("：将变与不变分离开。")]),t._v(" "),e("p",[e("strong",[t._v("关键代码")]),t._v("：建造者：创建和提供实例，导演：管理建造出来的实例的依赖关系。")]),t._v(" "),e("p",[e("strong",[t._v("优点")]),t._v("：")]),t._v(" "),e("ol",[e("li",[t._v("建造者独立，易扩展。")]),t._v(" "),e("li",[t._v("便于控制细节风险。")])]),t._v(" "),e("p",[e("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),e("ol",[e("li",[t._v("产品必须有共同点，范围有限制。")]),t._v(" "),e("li",[t._v("如内部变化复杂，会有很多的建造类。")])]),t._v(" "),e("p",[e("strong",[t._v("使用场景")]),t._v("：")]),t._v(" "),e("ol",[e("li",[t._v("需要生成的对象具有复杂的内部结构。")]),t._v(" "),e("li",[t._v("需要生成的对象内部属性本身相互依赖。")])]),t._v(" "),e("h2",{attrs:{id:"内部建造者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内部建造者"}},[t._v("#")]),t._v(" 内部建造者")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/syfxlin/code/blob/master/design-pattern-java/src/main/java/me/ixk/design_pattern/builder/UserBuilder.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("内部建造者使用内部类定义建造者，省略掉了指挥者和抽象建造者，此建造者只建造具体的类对象。")]),t._v(" "),e("h2",{attrs:{id:"外部建造者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外部建造者"}},[t._v("#")]),t._v(" 外部建造者")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/syfxlin/code/blob/master/design-pattern-java/src/main/java/me/ixk/design_pattern/builder/outer_builder",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("通常情况下我们使用建造者只会建造一种对象，而在一些情况下，我们需要更加复杂的构建，若使用内部类则会导致耦合度高，此时就可以将其分离出来，降低耦合度。")])])}),[],!1,null,null,null);r.default=v.exports}}]);